plugins {
    alias(libs.plugins.com.android.application)
    alias(libs.plugins.org.jetbrains.kotlin.android)
    alias(libs.plugins.com.google.dagger.hilt.android)
    alias(libs.plugins.com.google.devtools.ksp)
    id('kotlin-parcelize')
    // id("com.google.gms.google-services") // Google Play Services
    // id("com.google.firebase.crashlytics") // Google Play Services
}
hilt {
    enableAggregatingTask = true
}

android {
    namespace 'com.ferhatozcelik.jetpackcomposetemplate'
    compileSdk appCompileSdkVersion

    defaultConfig {
        applicationId "com.ferhatozcelik.jetpackcomposetemplate"
        minSdk appMinSdkVersion
        targetSdk appTargetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // Kotlin
    implementation(libs.kotlin.stdlib)
    implementation(libs.core.ktx)
    implementation(libs.appcompat)

    // Compose
    implementation(libs.activity.compose)
    implementation(platform(libs.compose.bom))
    implementation(libs.ui)
    implementation(libs.ui.graphics)
    implementation(libs.ui.tooling.preview)
    implementation(libs.material3)

    // JUnit
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.test.ext.junit)
    androidTestImplementation(libs.espresso.core)
    androidTestImplementation(platform(libs.compose.bom))
    androidTestImplementation(libs.ui.test.junit4)
    debugImplementation(libs.ui.tooling)
    debugImplementation(libs.ui.test.manifest)

    // Material Design
    implementation(libs.material)
    implementation libs.androidx.viewpager2

    // ConstraintLayout
    implementation(libs.constraintlayout)

    // Legacy Support Library
    implementation(libs.androidx.legacy.support.v4)

    // Multidex
    implementation(libs.androidx.multidex)

    // DeSugar Use Java 8 language features and APIs
    coreLibraryDesugaring(libs.desugar.jdk.libs)

    // Dagger Hilt
    implementation(libs.hilt)
    ksp(libs.hilt.compiler)

    // Room
    implementation(libs.room)
    implementation(libs.room.runtime)
    ksp(libs.room.compiler)

    // Coroutines
    implementation(libs.kotlinx.coroutines.core)
    implementation(libs.kotlinx.coroutines.android)

    // Lifecycle Scopes
    implementation(libs.lifecycle)
    implementation(libs.lifecycle.runtime)
    implementation(libs.lifecycle.runtime.ktx)

    // Retrofit
    implementation(libs.retrofit)
    implementation(libs.converter.gson)
    implementation(libs.logging.interceptor)

    // Navigation
    implementation libs.androidx.hilt.navigation.compose
    implementation libs.androidx.navigation.compose


    // Glide
    implementation(libs.glide)
    ksp(libs.ksp)

    // Firebase
    // implementation(libs.firebase)
    // implementation(libs.analytics)
    // implementation(libs.crashlytics)

}